package me.smoothhacker.swampsploit.ui.exploit

import android.os.Bundle
import android.util.Log
import android.view.View
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import androidx.fragment.app.commit
import androidx.navigation.ui.AppBarConfiguration
import me.smoothhacker.swampsploit.R
import me.smoothhacker.swampsploit.databinding.ActivityExploitBinding
import me.smoothhacker.swampsploit.exploit.ProFTPD
import me.smoothhacker.swampsploit.utils.ExploitContext


class ExploitActivity : AppCompatActivity() {

    private lateinit var appBarConfiguration: AppBarConfiguration
    private lateinit var binding: ActivityExploitBinding
    private lateinit var ctx: ExploitContext

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        ctx = ExploitContext(dataDir)

        binding = ActivityExploitBinding.inflate(layoutInflater)
        setContentView(binding.root)
        setSupportActionBar(binding.exploitToolbar)

        supportActionBar?.setDisplayHomeAsUpEnabled(true)

//        val navController = findNavController(R.id.nav_exploit_gallery)
//        appBarConfiguration = AppBarConfiguration(setOf(R.id.nav_exploit_gallery))
//        setupActionBarWithNavController(navController, appBarConfiguration)

        val selectedExploit = intent.getStringExtra("selectedExploit")

        if (selectedExploit.equals("Proftpd")){
            // launch proftpd fragment
            supportFragmentManager.commit {
                replace<ProftpdFragment>(R.id.fragment_proftpd)
                setReorderingAllowed(true)
                addToBackStack("exploitHome") // name can be null
            }
        }

        if (selectedExploit.equals("Netatalk")){
            // launch netatalk fragment
            supportFragmentManager.commit {
                replace<NetatalkFragment>(R.id.fragment_netatalk)
                setReorderingAllowed(true)
                addToBackStack("exploitHome") // name can be null
            }
        }

        val root: View = binding.root

        // moving the below code to the other fragment

        binding.ipAddressInput.setText(ctx.getHost(0))
        binding.portNumberInput.setText(ctx.getPort())
        binding.timeoutInput.setText(ctx.getTimeout())
        binding.tempPathInput.setText("/tmp")
        binding.sitePathInput.setText("/var/www/html")

        binding.exploitButton.setOnClickListener {
            val exploit = ProFTPD(ctx)
            Thread {
                Log.w("proftpd", "Hello")
                val result = when (exploit.exploit()) {
                    true -> "Success!"
                    false -> "Failed"
                }
                Log.w("proftpd", "result: $result")
                this.runOnUiThread { Toast.makeText(this, result, Toast.LENGTH_SHORT).show() }
            }.start()
        }
    }

//    override fun onOptionsItemSelected(item: MenuItem): Boolean {
//        when (item.getItemId()) {
//            android.R.id.home -> {
//                finish()
//                return true
//            }
//        }
//        return super.onOptionsItemSelected(item)
//    }
//    override fun onSupportNavigateUp(): Boolean {
//        val navController = findNavController(R.id.nav_host_fragment_content_main)
//        return navController.navigateUp(appBarConfiguration) || super.onSupportNavigateUp()
//    }

    override fun onDestroy() {
        super.onDestroy()
        ctx.save()
    }
}