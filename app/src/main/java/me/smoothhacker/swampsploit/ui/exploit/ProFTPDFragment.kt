package me.smoothhacker.swampsploit.ui.exploit

import android.os.Bundle
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import androidx.fragment.app.Fragment
import kotlinx.coroutines.GlobalScope
import kotlinx.coroutines.launch
import me.smoothhacker.swampsploit.databinding.ProtfpdDashboardBinding
import me.smoothhacker.swampsploit.exploit.ProFTPD

class ProFTPDFragment : Fragment() {

    private var _binding: ProtfpdDashboardBinding? = null

    // This property is only valid between onCreateView and
    // onDestroyView.
    private val binding get() = _binding!!

    override fun onCreateView(
        inflater: LayoutInflater,
        container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View {

        _binding = ProtfpdDashboardBinding.inflate(inflater, container, false)
        val root: View = binding.root

        binding.exploitButton.setOnClickListener {
            val exploit = ProFTPD(
                binding.ipAddressInput.text.toString(),
                binding.portNumberInput.text.toString().toInt(),
                binding.timeoutInput.text.toString().toInt(),
                binding.tempPathInput.text.toString(),
                binding.sitePathInput.text.toString(),
            )
            GlobalScope.launch {
                exploit.exploit()
            }
        }

        return root
    }

    override fun onDestroyView() {
        super.onDestroyView()
        _binding = null
    }
}