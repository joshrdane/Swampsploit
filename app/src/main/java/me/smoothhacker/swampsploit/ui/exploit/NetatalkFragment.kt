package me.smoothhacker.swampsploit.ui.exploit

import android.os.Build
import android.os.Bundle
import android.util.Log
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.Toast
import androidx.annotation.RequiresApi
import androidx.fragment.app.Fragment
import androidx.lifecycle.ViewModelProvider
import me.smoothhacker.swampsploit.databinding.FragmentNetatalkBinding
import me.smoothhacker.swampsploit.exploit.Netatalk
import me.smoothhacker.swampsploit.utils.ExploitContext


class NetatalkFragment : Fragment() {

    private var _binding: FragmentNetatalkBinding? = null
    private lateinit var ctx: ExploitContext


    // This property is only valid between onCreateView and
    // onDestroyView.
    private val binding get() = _binding!!

    @RequiresApi(Build.VERSION_CODES.TIRAMISU)
    override fun onCreateView(
        inflater: LayoutInflater,
        container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View {

        // call parent fragment manager?

        ctx = ExploitContext(context?.dataDir!!.path.toString())
        ctx.create()
        _binding = FragmentNetatalkBinding.inflate(inflater, container, false)
        val root: View = binding.root

        binding.ipAddressInput.setText(ctx.getHost(0))
        binding.portNumberInput.setText(ctx.getPort())
        binding.timeoutInput.setText(ctx.getTimeout())
        binding.fileNameInput.setText("PoC Demo")

        binding.netatalkButton.setOnClickListener {

            ctx.addHost(binding.ipAddressInput.text.toString())
            ctx.setPort(binding.portNumberInput.text.toString().toInt())
            ctx.setTimeout(binding.timeoutInput.text.toString().toInt())
            val exploit = Netatalk(ctx, binding.fileNameInput.text.toString())
            Thread {
                Log.w("netatalk", "Hello")

                val result = when (exploit.exploit()) {
                    true -> "Success!"
                    false -> "Failed"
                }

                Log.w("netatalk", "result: $result")

                this.activity?.runOnUiThread { Toast.makeText(this.context, result, Toast.LENGTH_SHORT).show() }
                ctx.save()
            }.start()
        }


        return root
    }

    override fun onDestroyView() {
        super.onDestroyView()
        _binding = null
    }
}